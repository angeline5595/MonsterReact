{"version":3,"sources":["Component/SearchBoxComponent/SearchBox.jsx","Component/CardComponent/Card.jsx","Component/CardListComponent/CardList.jsx","App.js","index.js"],"names":["SearchBox","props","className","type","placeholder","onChange","handleChange","Card","src","monster","id","alt","name","email","CardList","map","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAEaA,G,YAAU,SAACC,GAAD,OACrB,8BACI,uBAAOC,UAAU,SACjBC,KAAK,SACLC,YAAaH,EAAMG,YACnBC,SAAUJ,EAAMK,mBCLTC,G,MAAM,SAAAN,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKM,IAAG,+BAA0BP,EAAMQ,QAAQC,GAAxC,yBAAmEC,IAAI,KACjF,6BAAKV,EAAMQ,QAAQG,OACnB,4BAAIX,EAAMQ,QAAQI,aCJPC,G,MAAS,SAACb,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEED,EAAMQ,QAAQM,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WC0CVM,E,kDAzCb,aACC,IAAD,8BACE,gBAeJV,aAAa,SAACW,GACZ,EAAKC,SAAS,CACZC,YAAYF,EAAEG,OAAOC,SAhBrB,EAAKC,MACL,CACEC,SAAS,GACTJ,YAAY,IALhB,E,gEAUD,IAAD,OACEK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACK,SAASK,S,+BAQ5B,IAAD,EACuBC,KAAKP,MAA3BC,EADD,EACCA,SAASJ,EADV,EACUA,YACVW,EAAiBP,EAASQ,QAAO,SAAAtB,GAAO,OAC5CA,EAAQG,KAAKoB,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CACEE,YAAY,kBACZE,aAAcuB,KAAKvB,eAEpB,cAAC,EAAD,CAAUG,QAASqB,W,GArCVI,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1ce3961a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './search-box.styles.css'\r\nexport const SearchBox=(props)=>(\r\n  <div >\r\n      <input className='search'\r\n      type='search' \r\n      placeholder={props.placeholder} \r\n      onChange={props.handleChange}/>\r\n  </div>\r\n)","import React from 'react'\r\nimport './card.styles.css'\r\nexport const Card= props=>{\r\nreturn(\r\n  <div className='card-container'>\r\n    <img src={`https://robohash.org/${props.monster.id}set=set2&size=180x180`} alt=\"\"/>\r\n  <h2>{props.monster.name}</h2>\r\n  <p>{props.monster.email}</p>\r\n</div>\r\n) \r\n}\r\n","import React from 'react'\r\nimport {Card} from '../CardComponent/Card'\r\nimport './card-list.styles.css'\r\nexport const CardList=(props)=>(\r\n  <div className='card-list'>\r\n  {\r\n    props.monster.map(monster=>(\r\n      <Card key={monster.id} monster={monster}/>         \r\n    ))\r\n  }\r\n</div>\r\n)\r\n  \r\n   \r\n","import React,{Component} from 'react';\nimport './App.css';\nimport './Component/SearchBoxComponent/SearchBox'\nimport { CardList } from './Component/CardListComponent/CardList';\nimport { SearchBox } from './Component/SearchBoxComponent/SearchBox';\n\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n    this.state =\n    { \n      monsters:[],\n      searchField:''\n    };\n    \n }\ncomponentDidMount()\n{\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=>response.json())\n  .then(users=>this.setState({monsters:users}));\n \n}\nhandleChange=(e)=>{\n  this.setState({\n    searchField:e.target.value\n  })\n}\n  render(){\n    const {monsters,searchField}=this.state; \n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return(\n      <div className='App'>\n        <h1>Monster App</h1>\n        <SearchBox\n          placeholder='search Monsters' \n          handleChange={this.handleChange}\n          />\n         <CardList monster={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}